# Default build configuration-related properties.
# The master copy of this file lives as
# depot/Tumri/build/default.buildconf.properties,
# and is copied to buildconf.properties by `ant -f build/build.xml configure'.
#
# NOTE: This file contains tree-wide configuration properties.
# Any property that a developer may wish to change in the normal course of
# hacking lives here.  The file is divided into sections.  The first section
# specifies what to build.  The next section contains generic parameters
# applicable to multiple applications.  After that is one section for each
# application.
#
# NOTE: Several apps have a build.properties file and no buildconf.properties,
# with several build-tree and system related parameters defined there.
# This requires developers to make local-never-to-be-checked-in mods to their
# source tree.  This is less than ideal.  To fix this there are two
# "build properties" files:
#
# 1) buildconf.properties is NOT checked in (though the default version is,
#    as can several useful examples), and it defines various parameters
#    that the developer might like to or need to change in the normal course
#    of hacking.
#
# 2) build.properties is still checked in, but no longer contains such
#    parameters, and only contains parameters that aren't likely to change.
#
# NOTE: A better name for buildconf.properties might be config.properties,
# but it's ambiguous with files of similar names used at run-time.
#
# Property naming conventions:
# - application specific properties begin with the name of
#   the app, e.g. soz.install.dir
# - properties specifying a directory name end with ".dir"
# - properties specifying a file name end with ".file"
#
###############################################################################

# What to build.
# Set to false the packages you don't want to build.
# If the package is not checked out then it won't be built anyway, you don't
# have to say so here.

enable.widget=true
enable.advertiser=true
enable.ats=true
enable.caa=true
enable.cma=true
enable.mediabuying=true
enable.lls=true
enable.joz=true
enable.pxl=true
enable.tlp=true
enable.logger=true
enable.icornerstore=true
enable.publisher=false
enable.scapi=true
enable.scc=false
enable.soz=false
enable.tmc=true
enable.qac=true
enable.tcm=true
enable.trs=true
enable.cbo=true
enable.lp=true
enable.tas-utils=true
enable.tas-sso=true
enable.webutils=true
enable.zini-java-api=true
enable.tumriportal.copy.dependent=false
enable.tumriportal=false
enable.buildui=true
enable.wac=true
enable.jcl=true
enable.jic=true
enable.llc=true
enable.ta=true
enable.cof=true
enable.lca=true
enable.adp=true
enable.tm=true
enable.tc=true
enable.igs=true
enable.tca=true
enable.pdlp=true

###############################################################################

# Global (non-application-specific) build properties.

install.dir=/usr/local/tumri

# This is a separate property to simplify doc-only build/installs.
doc.install.dir=${install.dir}/doc
report.install.dir=${install.dir}/report

# These Java projects put these configure-related properties into
# build.properties: TumriAffiliateTracker, TumriLogger, iCornerStore.
# ??? Not clear how we want to handle this.  The plan-of-record is to
# remove these kinds of parameters out of build.properties.

app.server.home=/opt/jboss

# The event-logs and error-logs directories.
# Several Java apps have an event-logs and error-logs directory.  Rather than
# provide for different values for each app, we just provide for specifying a
# global value and have every app use it.
# The value here is usable although not ideal (I doubt any default value is
# ideal).
# ??? It would be nice if a relative path was usable here, but since this
# is a global (non-app-specific) parameter, that presumably won't work
# very well.

event.logs.dir=/tmp/tumri/event-logs
error.logs.dir=/tmp/tumri/error-logs
joz.error.logs.dir=/usr/share/tomcat5/logs

# Global build properties: tomcat5 home and libraries.
tomcat.home=/usr/share/tomcat5
# Name of the library
servlet.lib.jar=servlet-api.jar

###############################################################################

# SOZ build properties

soz.install.dir=/opt/SoZ
# ??? The name "home2" is to match the corresponding parameter
# in the soz script.
soz.home2.dir=/home/soz

# Set this to specify the version of soz being built.
# The default value is a simple one for developer sandboxes.
# An example of a release version number is "soz-2.3.0#11".
# Note that this can also be overridden on the command line with
# -Dsoz.version=mumble.
soz.version=mybuild

###############################################################################

# Joz build properties.

joz.install.dir=/tmp

###############################################################################

# TA build properties.

ta.install.dir=/tmp

###############################################################################
# TA build properties.

lca.install.dir=/tmp

###############################################################################

# tip build properties.

tip.install.dir=/tmp

###############################################################################

###############################################################################

# trs build properties.

trs.install.dir=/tmp

###############################################################################

###############################################################################

# igs build properties.

igs.install.dir=/tmp

###############################################################################

# SmartShelf build properties

smartshelf.AppServerURL=${AppServerURL}
smartshelf.LoggerURL=${LoggerURL}
smartshelf.ZiniServerURL=${ZiniServerURL}
smartshelf.AtsServerUrl=${AtsServerUrl}

#smartshelf.AppServerURL=http://localhost:8080
#smartshelf.LoggerURL=http://localhost:8080/TumriLogger/TumriLogger
#smartshelf.ZiniServerURL=http://localhost:2501/standard/acl-direct
#smartshelf.AtsServerUrl=http://localhost:8080/TumriAts/TumriAts

